#!/usr/bin/env node

/**
 * Stripe Product Setup Script
 * 
 * This script automatically creates the required Stripe products and prices
 * for your SaaStastic application. Run this after setting up your Stripe account.
 * 
 * Usage:
 *   node scripts/setup-stripe-products.js
 * 
 * Prerequisites:
 *   1. Get your Stripe Secret Key from: https://dashboard.stripe.com/apikeys
 *   2. Set STRIPE_SECRET_KEY environment variable OR add it to .env.local
 * 
 * Windows Setup:
 *   set STRIPE_SECRET_KEY=sk_test_your_key_here
 *   node scripts/setup-stripe-products.js
 * 
 * Mac/Linux Setup:
 *   export STRIPE_SECRET_KEY=sk_test_your_key_here
 *   node scripts/setup-stripe-products.js
 */

// Try to load from .env.local if no environment variable is set
require('dotenv').config({ path: '.env.local' });

const Stripe = require('stripe');
const fs = require('fs');
const path = require('path');

// Initialize Stripe
const stripe = new Stripe(process.env.STRIPE_SECRET_KEY, {
  apiVersion: '2024-11-20.acacia',
});

// Product configuration from app-config.ts
const products = [
  {
    name: 'Starter',
    description: 'Perfect for small teams getting started',
    monthlyPrice: 2900, // $29.00 in cents
    yearlyPrice: 29000, // $290.00 in cents (save $58)
    features: [
      'Up to 5 team members',
      '10GB storage',
      'Basic support',
      'Core features'
    ]
  },
  {
    name: 'Professional',
    description: 'For growing businesses that need more',
    monthlyPrice: 9900, // $99.00 in cents
    yearlyPrice: 99000, // $990.00 in cents (save $198)
    features: [
      'Up to 25 team members',
      '100GB storage',
      'Priority support',
      'Advanced features',
      'API access'
    ]
  },
  {
    name: 'Enterprise',
    description: 'For large organizations with custom needs',
    monthlyPrice: 29900, // $299.00 in cents
    yearlyPrice: 299000, // $2990.00 in cents (save $598)
    features: [
      'Unlimited team members',
      'Unlimited storage',
      '24/7 dedicated support',
      'Custom integrations',
      'SLA guarantee'
    ]
  }
];

async function createProducts() {
  console.log('üöÄ Setting up Stripe products for SaaStastic...\n');

  const envVars = [];

  try {
    for (const productConfig of products) {
      console.log(`üì¶ Creating product: ${productConfig.name}`);
      
      // Create product
      const product = await stripe.products.create({
        name: productConfig.name,
        description: productConfig.description,
        metadata: {
          features: JSON.stringify(productConfig.features),
          created_by: 'saastastic-setup-script'
        }
      });

      console.log(`   ‚úÖ Product created: ${product.id}`);

      // Create monthly price
      const monthlyPrice = await stripe.prices.create({
        product: product.id,
        unit_amount: productConfig.monthlyPrice,
        currency: 'usd',
        recurring: {
          interval: 'month'
        },
        nickname: `${productConfig.name} Monthly`,
        metadata: {
          plan: productConfig.name.toLowerCase(),
          interval: 'month'
        }
      });

      console.log(`   ‚úÖ Monthly price created: ${monthlyPrice.id}`);

      // Create yearly price
      const yearlyPrice = await stripe.prices.create({
        product: product.id,
        unit_amount: productConfig.yearlyPrice,
        currency: 'usd',
        recurring: {
          interval: 'year'
        },
        nickname: `${productConfig.name} Yearly`,
        metadata: {
          plan: productConfig.name.toLowerCase(),
          interval: 'year'
        }
      });

      console.log(`   ‚úÖ Yearly price created: ${yearlyPrice.id}`);

      // Store environment variables
      const planName = productConfig.name.toUpperCase();
      envVars.push(`STRIPE_PRODUCT_${planName}="${product.id}"`);
      envVars.push(`STRIPE_PRICE_${planName}_MONTHLY="${monthlyPrice.id}"`);
      envVars.push(`STRIPE_PRICE_${planName}_YEARLY="${yearlyPrice.id}"`);

      console.log('');
    }

    // Generate environment variables file
    const envContent = [
      '# Stripe Products and Prices',
      '# Generated by setup-stripe-products.js',
      '# Add these to your .env.local file',
      '',
      ...envVars,
      ''
    ].join('\n');

    const envFilePath = path.join(__dirname, '..', 'stripe-env-vars.txt');
    fs.writeFileSync(envFilePath, envContent);

    console.log('üéâ All products created successfully!');
    console.log('\nüìù Environment variables saved to: stripe-env-vars.txt');
    console.log('\nüîß Next steps:');
    console.log('1. Copy the environment variables from stripe-env-vars.txt');
    console.log('2. Add them to your .env.local file');
    console.log('3. Restart your development server');
    console.log('4. Set up your webhook endpoint in Stripe Dashboard');
    console.log('\nüí° Webhook URL: https://yourdomain.com/api/webhooks/stripe');

  } catch (error) {
    console.error('‚ùå Error creating products:', error.message);
    
    if (error.code === 'authentication_required') {
      console.log('\nüîë Authentication failed. Please check:');
      console.log('1. STRIPE_SECRET_KEY is set in your environment');
      console.log('2. You are using the correct API key');
      console.log('3. Your Stripe account is activated');
    }
    
    process.exit(1);
  }
}

// Validation
if (!process.env.STRIPE_SECRET_KEY) {
  console.error('‚ùå STRIPE_SECRET_KEY environment variable is required');
  console.log('\nüîß To fix this:');
  console.log('1. Get your secret key from Stripe Dashboard ‚Üí Developers ‚Üí API Keys');
  console.log('2. Set it in your environment: export STRIPE_SECRET_KEY=sk_test_...');
  console.log('3. Run this script again');
  process.exit(1);
}

if (!process.env.STRIPE_SECRET_KEY.startsWith('sk_')) {
  console.error('‚ùå Invalid Stripe secret key format');
  console.log('Secret key should start with sk_test_ or sk_live_');
  process.exit(1);
}

// Run the setup
createProducts().catch(console.error);
