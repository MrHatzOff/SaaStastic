# SaaStastic Environment Variables Configuration
# Copy this file to .env.local and fill in your actual values
# NEVER commit .env.local to version control!

# ============================================
# REQUIRED SERVICES (Must configure)
# ============================================

# Database Connection
# Get from your PostgreSQL provider (e.g., Vercel Postgres, Supabase, Railway)
DATABASE_URL="postgresql://username:password@host:5432/database?sslmode=require"

# Clerk Authentication (Required)
# Sign up at https://clerk.com
# Get these from: Dashboard → API Keys
NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY="pk_test_..."
CLERK_SECRET_KEY="sk_test_..."

# Clerk Webhook Secret (Optional but recommended for production)
# Get from: Clerk Dashboard → Webhooks → Add Endpoint
# CLERK_WEBHOOK_SECRET="whsec_..."

# Stripe Payment Processing (Required)
# Sign up at https://stripe.com
# Development: Use test keys (starts with pk_test_ and sk_test_)
# Production: Use live keys (starts with pk_live_ and sk_live_)
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY="pk_test_..."
STRIPE_SECRET_KEY="sk_test_..."

# Stripe Webhook Secret (Critical for production)
# Get from: Stripe Dashboard → Developers → Webhooks → Add Endpoint
# Endpoint URL: https://yourdomain.com/api/webhooks/stripe
# Events to listen: checkout.session.completed, customer.subscription.*, invoice.*
STRIPE_WEBHOOK_SECRET="whsec_..."

# ============================================
# OPTIONAL SERVICES (Can be disabled/removed)
# ============================================

# Sentry Error Tracking (OPTIONAL but recommended)
# Sign up at https://sentry.io (free tier available)
# Get DSN from: Sentry → Settings → Projects → [Your Project] → Client Keys (DSN)
# Leave blank to disable Sentry
# SENTRY_DSN="https://examplePublicKey@o0.ingest.sentry.io/0"
# NEXT_PUBLIC_SENTRY_DSN="https://examplePublicKey@o0.ingest.sentry.io/0"

# Upstash Redis for Rate Limiting (OPTIONAL)
# Sign up at https://upstash.com
# Get from: Upstash Dashboard → Redis → [Your Database]
# Leave blank to disable rate limiting
# UPSTASH_REDIS_REST_URL="https://your-endpoint.upstash.io"
# UPSTASH_REDIS_REST_TOKEN="your-token"

# Resend Email Service (OPTIONAL)
# Sign up at https://resend.com
# Get from: Resend Dashboard → API Keys
# Alternative: Use SendGrid, Postmark, or other email providers
# Leave blank to disable email features
# RESEND_API_KEY="re_..."

# ============================================
# APPLICATION CONFIGURATION
# ============================================

# Application URL
# Development: http://localhost:3000
# Production: https://yourdomain.com
NEXT_PUBLIC_APP_URL="http://localhost:3000"

# Environment (development, staging, production)
NODE_ENV="development"

# ============================================
# FEATURE FLAGS (Optional)
# ============================================

# Enable/disable specific features
# NEXT_PUBLIC_ENABLE_ANALYTICS="true"
# NEXT_PUBLIC_ENABLE_CHAT_SUPPORT="false"

# ============================================
# NOTES FOR CUSTOMERS
# ============================================

# REQUIRED SERVICES (Must sign up):
# 1. Database: PostgreSQL (Vercel, Supabase, Railway, etc.)
# 2. Clerk: Authentication & user management
# 3. Stripe: Payment processing

# OPTIONAL SERVICES (Can disable by not setting variables):
# 1. Sentry: Error tracking & monitoring
# 2. Upstash: Rate limiting (can implement alternatives)
# 3. Resend: Email service (can use SendGrid, Postmark, etc.)

# SECURITY BEST PRACTICES:
# - Never commit .env.local to version control
# - Use different keys for development/staging/production
# - Rotate keys regularly
# - Use test mode in Stripe during development
# - Set up webhook endpoints in production before going live

# GETTING HELP:
# - See docs/getting-started/environment-setup.md for detailed setup
# - See docs/getting-started/service-setup-guide.md for service-specific instructions
# - All environment variables are documented in docs/development/environment-reference.md
